
import java.awt.Color;
import java.awt.Font;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author MEMO0464
 */
public class ComponenteHint extends javax.swing.JPanel {
    private String hint = "{// Hint Text \\}";
    public enum tipoCampo{CADENA,NUMERICO};
    private tipoCampo tipo = tipoCampo.CADENA;
    
    public void setTipoCampo(tipoCampo tipo){
        this.tipo = tipo;
    }
    
    public tipoCampo getTipoCampo(){
        return tipo;
    }
    
    public void setHint(String texto){
        hint = texto;
        jTextField1.setText(hint);
    }
    
    public String getHint(){
        return hint;
    }
    
     public void setColorHint(Color color){
        jTextField1.setForeground(color);
    }
    
    public Color getColorHint(){
        return jTextField1.getForeground();
    }   
    
    public void setLetra(Font letra){
        jTextField1.setFont(letra);
    }
    
    public Font getLetra(){
        return jTextField1.getFont();
    }
    
    
    public ComponenteHint() {
        initComponents();
        
        jTextField1.setText(hint);
        jTextField1.setForeground(Color.BLACK);
        jTextField1.addFocusListener(new FocusListener(){
           
            @Override
            public void focusGained(FocusEvent e){
                if(jTextField1.getText().startsWith(hint) == true){
                    jTextField1.setText("");
                }
            }
            @Override
            public void focusLost(FocusEvent e){
                if(jTextField1.getText().isEmpty()){
                    jTextField1.setText(hint);
                }
            }
        });
        
        jTextField1.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                char tecla = e.getKeyChar();
                
                if(tipo == tipoCampo.NUMERICO){
                    if( ( ( tecla < 48 ) || ( tecla > 57) ) && ( tecla != '\b' )){
                        e.consume(); 
                    }
                }
            }

            @Override
            public void keyPressed(KeyEvent e) {
                
            }

            @Override
            public void keyReleased(KeyEvent e) {
                
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTextField1)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
